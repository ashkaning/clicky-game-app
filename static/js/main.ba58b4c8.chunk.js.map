{"version":3,"sources":["components/AnimateCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Row/index.js","App.js","index.js"],"names":["AnimateCard","props","className","onClick","clickyGameFunc","id","alt","name","src","image","Wrapper","children","Title","score","highscore","winalert","lostalert","BootRow","App","state","animations","clicked","shuffle","sort","Math","random","resetScore","setState","resetScoreWon","indexOf","newScore","concat","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ovFAaeA,MAVf,SAAqBC,GACnB,OACE,yBAAKC,UAAU,oBAAoBC,QAAS,kBAAMF,EAAMG,eAAeH,EAAMI,MAEzE,yBAAKH,UAAU,gBAAgBI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,U,MCApDC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,aAAaD,EAAMU,W,MCa5BC,MAdf,SAAeX,GACb,OACE,yBAAKC,UAAU,OAEb,wBAAIA,UAAU,SAASD,EAAMU,UAC7B,yBAAKT,UAAU,gCACb,0BAAMA,UAAU,cAAhB,UADF,IAC8CD,EAAMY,MADpD,IAC2D,0BAAMX,UAAU,kBAAhB,eAAoDD,EAAMa,UACnH,yBAAKZ,UAAU,8BAA8BD,EAAMc,UACnD,yBAAKb,UAAU,+BAA+BD,EAAMe,cCH7CC,MANf,SAAiBhB,GACf,OACE,yBAAKC,UAAU,OAAOD,EAAMU,SAA5B,M,OC+EWO,E,2MA3EbC,MAAQ,CACNC,aACAP,MAAO,EACPC,UAAW,EACXO,QAAS,GACTL,UAAU,GACVD,SAAS,I,EAEXO,QAAU,SAACF,GAET,OADAA,EAAWG,MAAK,kBAAMC,KAAKC,SAAW,MAC/BL,G,EAETM,WAAa,WACX,EAAKC,SAAS,CACZd,MAAO,EACPC,UAAW,EAAKK,MAAML,UACtBO,QAAS,M,EAGbO,cAAgB,WACd,EAAKD,SAAS,CACZd,MAAO,EACPC,UAAW,EACXO,QAAS,M,EAIbjB,eAAiB,SAAAC,GAGf,GAFA,EAAKsB,SAAS,CAACZ,SAAS,sBACxB,EAAKY,SAAS,CAACX,UAAU,MACe,IAApC,EAAKG,MAAME,QAAQQ,QAAQxB,GAAY,CACzC,IAAMyB,EAAW,EAAKX,MAAMN,MAAQ,EACpC,EAAKS,QAAQF,GACb,EAAKO,SAAS,CACZd,MAAOiB,IAELA,GAAY,EAAKX,MAAML,YACzB,EAAKa,SAAS,CAAEb,UAAWgB,IAC3B,EAAKR,QAAQF,IAEC,KAAbU,IACH,EAAKH,SAAS,CAACZ,SAAS,aACxB,EAAKY,SAAS,CAACX,UAAU,KACvB,EAAKM,QAAQF,GACb,EAAKQ,iBAEP,EAAKD,SAAS,CAAEN,QAAS,EAAKF,MAAME,QAAQU,OAAO1B,UAInD,EAAKsB,SAAS,CAACZ,SAAS,KACxB,EAAKY,SAAS,CAACX,UAAU,cACzB,EAAKM,QAAQF,GACb,EAAKM,c,wEAGC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOb,MAAOmB,KAAKb,MAAMN,MAAOC,UAAWkB,KAAKb,MAAML,UAAWE,UAAWgB,KAAKb,MAAMH,UAAWD,SAAUiB,KAAKb,MAAMJ,UAAvH,mDACA,kBAAC,EAAD,KACGiB,KAAKb,MAAMC,WAAWa,KAAI,SAAAC,GAAM,OAC/B,kBAAC,EAAD,CACE9B,eAAgB,EAAKA,eACrBC,GAAI6B,EAAO7B,GACX8B,IAAKD,EAAO7B,GACZI,MAAOyB,EAAOzB,iB,GAnEV2B,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ba58b4c8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction AnimateCard(props) {\n  return (\n    <div className=\"col-md-2 card-box\" onClick={() => props.clickyGameFunc(props.id)}>\n  \n        <img className=\"img-thumbnail\" alt={props.name} src={props.image} />\n\n    </div>\n  );\n}\n\nexport default AnimateCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"row\">\n      \n      <h3 className=\"title\">{props.children}</h3>\n      <div className=\"scores text-center col-md-12\">\n        <span className=\"scoreClass\">Score:</span> {props.score} <span className=\"highScoreClass\">Highscore: </span>{props.highscore}\n        <div className=\"col-md-12  text-center win\">{props.winalert}</div>\n        <div className=\"col-md-12  text-center lost\">{props.lostalert}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Title;\n","import React from \"react\";\r\n\r\nfunction BootRow(props) {\r\n  return (\r\n    <div className=\"row\">{props.children} </div>\r\n  )\r\n}\r\n\r\nexport default BootRow;\r\n","import React, { Component } from \"react\";\nimport AnimateCard from \"./components/AnimateCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport BootRow from \"./components/Row\";\nimport animations from \"./friends.json\";\n\nclass App extends Component {\n  state = {\n    animations,\n    score: 0,\n    highscore: 0,\n    clicked: [],\n    lostalert:\"\",\n    winalert:\"\"\n  };\n  shuffle = (animations)=> {\n    animations.sort(() => Math.random() - 0.5);\n    return animations\n  }\n  resetScore = () => {\n    this.setState({\n      score: 0,\n      highscore: this.state.highscore,\n      clicked: []\n    })\n  }\n  resetScoreWon = ()=>{\n    this.setState({\n      score: 0,\n      highscore: 0,\n      clicked: []\n    })\n  }\n\n  clickyGameFunc = id => {\n    this.setState({winalert:\"Good Job Continue\"})\n    this.setState({lostalert:\"\"})\n    if (this.state.clicked.indexOf(id) === -1) {\n      const newScore = this.state.score + 1;\n      this.shuffle(animations)\n      this.setState({\n        score: newScore\n      });\n      if (newScore >= this.state.highscore) {\n        this.setState({ highscore: newScore });\n        this.shuffle(animations)\n      }\n     if (newScore === 10) {\n      this.setState({winalert:\"You Won!\"})\n      this.setState({lostalert:\"\"})\n        this.shuffle(animations)\n        this.resetScoreWon()\n      }\n      this.setState({ clicked: this.state.clicked.concat(id) });\n\n    }\n    else {\n      this.setState({winalert:\"\"})\n      this.setState({lostalert:\"You Lost!\"})\n      this.shuffle(animations)\n      this.resetScore()\n    }\n  }\n  render() {\n    return (\n      <Wrapper>\n        <Title score={this.state.score} highscore={this.state.highscore} lostalert={this.state.lostalert} winalert={this.state.winalert}>Click an image to begin! Don't Click duplicates</Title>\n        <BootRow>\n          {this.state.animations.map(friend => (\n            <AnimateCard\n              clickyGameFunc={this.clickyGameFunc}\n              id={friend.id}\n              key={friend.id}\n              image={friend.image}\n            />\n          ))}\n        </BootRow>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}