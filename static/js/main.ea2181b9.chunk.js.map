{"version":3,"sources":["components/AnimateCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Row/index.js","App.js","index.js"],"names":["AnimateCard","props","className","onClick","clickyGameFunc","id","alt","name","src","image","Wrapper","children","Title","score","highscore","BootRow","App","state","animations","clicked","shuffle","sort","Math","random","resetScore","setState","indexOf","newScore","alert","concat","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ovFAaeA,MAVf,SAAqBC,GACnB,OACE,yBAAKC,UAAU,oBAAoBC,QAAS,kBAAMF,EAAMG,eAAeH,EAAMI,MAEzE,yBAAKH,UAAU,gBAAgBI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,U,MCApDC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,aAAaD,EAAMU,W,MCW5BC,MAZf,SAAeX,GACb,OACE,yBAAKC,UAAU,OAEb,wBAAIA,UAAU,SAASD,EAAMU,UAC7B,yBAAKT,UAAU,gCACb,0BAAMA,UAAU,cAAhB,UADF,IAC8CD,EAAMY,MADpD,IAC2D,0BAAMX,UAAU,kBAAhB,eAAoDD,EAAMa,aCD5GC,MANf,SAAiBd,GACf,OACE,yBAAKC,UAAU,OAAOD,EAAMU,SAA5B,M,OCiEWK,E,2MA7DbC,MAAQ,CACNC,aACAL,MAAO,EACPC,UAAW,EACXK,QAAS,I,EAEXC,QAAU,SAACF,GAET,OADAA,EAAWG,MAAK,kBAAMC,KAAKC,SAAW,MAC/BL,G,EAETM,WAAa,WACX,EAAKC,SAAS,CACZZ,MAAO,EACPC,UAAW,EAAKG,MAAMH,UACtBK,QAAS,M,EAIbf,eAAiB,SAAAC,GACf,IAAwC,IAApC,EAAKY,MAAME,QAAQO,QAAQrB,GAAY,CACzC,IAAMsB,EAAW,EAAKV,MAAMJ,MAAQ,EACpC,EAAKO,QAAQF,GACb,EAAKO,SAAS,CACZZ,MAAOc,IAELA,GAAY,EAAKV,MAAMH,WACzB,EAAKW,SAAS,CAAEX,UAAWa,IAC3B,EAAKP,QAAQF,IAEO,IAAbS,IACPC,MAAM,YACN,EAAKR,QAAQF,IAEf,EAAKO,SAAS,CAAEN,QAAS,EAAKF,MAAME,QAAQU,OAAOxB,UAInDuB,MAAM,QACN,EAAKR,QAAQF,GACb,EAAKM,c,wEAGC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOX,MAAOiB,KAAKb,MAAMJ,MAAOC,UAAWgB,KAAKb,MAAMH,WAAtD,mDACA,kBAAC,EAAD,KACGgB,KAAKb,MAAMC,WAAWa,KAAI,SAAAC,GAAM,OAC/B,kBAAC,EAAD,CACE5B,eAAgB,EAAKA,eACrBC,GAAI2B,EAAO3B,GACX4B,IAAKD,EAAO3B,GACZI,MAAOuB,EAAOvB,iB,GArDVyB,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ea2181b9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction AnimateCard(props) {\n  return (\n    <div className=\"col-md-2 card-box\" onClick={() => props.clickyGameFunc(props.id)}>\n  \n        <img className=\"img-thumbnail\" alt={props.name} src={props.image} />\n\n    </div>\n  );\n}\n\nexport default AnimateCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"row\">\n      \n      <h3 className=\"title\">{props.children}</h3>\n      <div className=\"scores text-center col-md-12\">\n        <span className=\"scoreClass\">Score:</span> {props.score} <span className=\"highScoreClass\">Highscore: </span>{props.highscore}\n      </div>\n    </div>\n  )\n}\n\nexport default Title;\n","import React from \"react\";\r\n\r\nfunction BootRow(props) {\r\n  return (\r\n    <div className=\"row\">{props.children} </div>\r\n  )\r\n}\r\n\r\nexport default BootRow;\r\n","import React, { Component } from \"react\";\nimport AnimateCard from \"./components/AnimateCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport BootRow from \"./components/Row\";\nimport animations from \"./friends.json\";\n\nclass App extends Component {\n  state = {\n    animations,\n    score: 0,\n    highscore: 0,\n    clicked: []\n  };\n  shuffle = (animations)=> {\n    animations.sort(() => Math.random() - 0.5);\n    return animations\n  }\n  resetScore = () => {\n    this.setState({\n      score: 0,\n      highscore: this.state.highscore,\n      clicked: []\n    })\n  }\n\n  clickyGameFunc = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      const newScore = this.state.score + 1;\n      this.shuffle(animations)\n      this.setState({\n        score: newScore\n      });\n      if (newScore >= this.state.highscore) {\n        this.setState({ highscore: newScore });\n        this.shuffle(animations)\n      }\n      else if (newScore === 4) {\n        alert('You Won!')\n        this.shuffle(animations)\n      }\n      this.setState({ clicked: this.state.clicked.concat(id) });\n\n    }\n    else {\n      alert('lost')\n      this.shuffle(animations)\n      this.resetScore()\n    }\n  }\n  render() {\n    return (\n      <Wrapper>\n        <Title score={this.state.score} highscore={this.state.highscore}>Click an image to begin! Don't Click duplicates</Title>\n        <BootRow>\n          {this.state.animations.map(friend => (\n            <AnimateCard\n              clickyGameFunc={this.clickyGameFunc}\n              id={friend.id}\n              key={friend.id}\n              image={friend.image}\n            />\n          ))}\n        </BootRow>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}